<style>
  article .location .city .selected {
    background-color: <%= locals.setting.pointColor %>;
  }

  article .location .province .selected {
    background-color: <%= locals.setting.pointColor %>;
  }

  article .align ul li .selected {
    color: <%= locals.setting.pointColor %>;
  }
</style>
<article>
  <section class="location">
    <div class="cities">
      <% cities.forEach(c => { %>
      <div class="city" cityId="<%= c.id %>"><a href="/location?city=<%= c.id %>" class=""><%= c.title %></a></div>
      <% }) %>
    </div>
    <div class="provinces">
      <div class="province"provinceId="0"><a href="/location<% if (location.city) { %>?city=<%= location.city %><% } %>" class="">전체</a></div>
      <% provinces.forEach(p => { %>
      <div class="province" provinceId="<%= p.id %>"><a href="/location?<% if (location.city) { %>city=<%= location.city %>&<% } %>province=<%= p.id %>"><%= p.title %></a></div>
      <% }) %>
    </div>
  </section>
  <section class="align">
    <ul>
      <li><a href="/location?<% if (location.city) { %>city=<%= location.city %>&<% } %><% if (location.province) { %>province=<%= location.province %>&<% } %>align=distance" class="<% if (align === 'distance' || align === null) { %>selected<% } %>">거리순</a></li>
      <li><a href="/location?<% if (location.city) { %>city=<%= location.city %>&<% } %><% if (location.province) { %>province=<%= location.province %>&<% } %>align=update" class="<% if (align === 'update') { %>selected<% } %>">업데이트순</a></li>
      <li><a href="/location?<% if (location.city) { %>city=<%= location.city %>&<% } %><% if (location.province) { %>province=<%= location.province %>&<% } %>align=view" class="<% if (align === 'view') { %>selected<% } %>">조회순</a></li>
      <li><a href="/location?<% if (location.city) { %>city=<%= location.city %>&<% } %><% if (location.province) { %>province=<%= location.province %>&<% } %>align=review" class="<% if (align === 'review') { %>selected<% } %>">리뷰순</a></li>
      <li><a href="/location?<% if (location.city) { %>city=<%= location.city %>&<% } %><% if (location.province) { %>province=<%= location.province %>&<% } %>align=grade" class="<% if (align === 'grade') { %>selected<% } %>">평점순</a></li>
    </ul>
  </section>
  <%- include('../offline/stores') %>
</article>
<script>
  const params = new URLSearchParams(window.location.search);
  const currentCity = params.get('city');
  const currentProvince = params.get('province');
  const currentAlign = params.get('align');
  const cities = document.querySelectorAll('.city');
  const provinces = document.querySelectorAll('.province');
  cities.forEach(city => {
    if (city.attributes.cityId.value === currentCity) {
      city.querySelector('a').className = 'selected';
    }
  });
  provinces.forEach(province => {
    if (province.attributes.provinceId?.value === 0 &&  currentProvince === null) {
      province.querySelector('a').className = 'selected';
    } else if (province.attributes.provinceId?.value === currentProvince) {
      province.querySelector('a').className = 'selected';
    }
  });
</script>
<script>
  const getGeolocation = () => {
    return new Promise((resolve, reject) => {
      const xhr = new XMLHttpRequest();
      xhr.open('GET', '/api/offline/geolocation');
      xhr.onload = () => {
        const result = xhr.responseText;
        resolve(result);
      };
      xhr.setRequestHeader('Content-Type', 'application/json');
      xhr.send();
    });
  };

  const setGeolocation = (latitude, longitude) => {
    return new Promise((resolve, reject) => {
      const data = {
        latitude,
        longitude,
      }
      const xhr = new XMLHttpRequest();
      xhr.open('POST', '/api/offline/geolocation');
      xhr.onload = () => {
        const result = xhr.responseText;
        resolve(result);
      };
      xhr.setRequestHeader('Content-Type', 'application/json');
      xhr.send(JSON.stringify(data));
    });
  };

  window.onload = async () => {
    const geoCookie = await getGeolocation();
    if (!geoCookie) {
      navigator.geolocation.getCurrentPosition(async (pos) => {
        const latitude = pos.coords.latitude;
        const longitude = pos.coords.longitude;
        const result = await setGeolocation(latitude, longitude);
        if (result) {
          window.location.reload();
        }
      }, async (err) => {
        const result = await setGeolocation(null, null);
        if (result) {
          window.location.reload();
        }
      });
    }
  };
</script>